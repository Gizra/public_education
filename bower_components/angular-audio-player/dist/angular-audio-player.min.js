/*! angular-audio-player v0.1.1-0-gb78ba72-dirty | date: 05-08-2013 */
angular.module("angular-audio-player",["helperFunctions"]).directive("audioPlayer",["$rootScope","$log","$interpolate","$timeout","throttle",function(a,b,c,d,e){var f=function(a,b,c,d){return this instanceof f?(d=d||{},c=c||[],this._element=a,this._audioTag=a[0],this._name=d.name||"audioplayer",this._scope=b,this._bindListeners(b),this._playlist=c,this.playing=!1,this.currentTrack=0,this.tracks=c.length,this.volume=this._audioTag.volume,this.duration=this._audioTag.duration,this.formatDuration="",this.currentTime=this._audioTag.currentTime,this.formatTime="",this.loadPercent=0,this.position=this.currentTime,void 0):new f(c,d)};return f.prototype={load:function(a,b){if("boolean"==typeof a?(b=a,a=null):"object"==typeof a&&(this._clearAudioList(),this._addAudioList(a)),this._audioTag.load(),b){var c=this;c._element.bind("canplaythrough",function(){c.play(),c._element.unbind("canplaythrough")})}},play:function(a){return this._playlist.length>a?(this.currentTrack=a+1,this.load(this._playlist[a],!0)):(!this.currentTrack&&this._audioTag.readyState&&this.currentTrack++,this._audioTag.play(),void 0)},playPause:function(a){"number"==typeof a&&a+1!==this.currentTrack?this.play(a):this.playing?this.pause():this.play()},pause:function(){this._audioTag.pause()},next:function(a){var b=this;if(b.currentTrack&&b.currentTrack<b.tracks){var c=a||b.playing;b.pause(),d(function(){b._clearAudioList(),b._addAudioList(b._playlist[b.currentTrack]),b.load(c),b.currentTrack++})}},prev:function(){var a=this;if(a.currentTrack&&a.currentTrack-1){var b=a.playing;a.pause(),d(function(){a._clearAudioList(),a._addAudioList(a._playlist[a.currentTrack-2]),a.load(b),a.currentTrack--})}},_addAudioList:function(a){var b=this;if(angular.isArray(a))angular.forEach(a,function(a){var d=angular.element(c('<source src="{{ src }}" type="{{ type }}" media="{{ media }}">')(a));b._element.append(d)});else if(angular.isObject(a)){var d=angular.element(c('<source src="{{ src }}" type="{{ type }}" media="{{ media }}">')(a));b._element.append(d)}},_clearAudioList:function(){this._element.contents().remove()},_formatTime:function(a){var b,c=parseInt(a/3600,10)%24,d=parseInt(a/60,10)%60,e=parseInt(a%60,10),f=(10>d?"0"+d:d)+":"+(10>e?"0"+e:e);return b=c>0?(10>c?"0"+c:c)+":"+f:f},_bindListeners:function(a){var c=this,d=this._element,f=e(1e3,!1,function(){b.info("count how many times."),a.$apply(function(){c.currentTime=c.position=c._audioTag.currentTime,c.formatTime=c._formatTime(c.currentTime)})}),g=function(b){return function(){a.$apply(function(){c.playing=b}),b?a.$emit(c._name+":play",c.currentTrack-1):a.$emit(c._name+":pause")}},h=function(){a.$apply(function(){c.currentTrack||c.currentTrack++,c.duration=c._audioTag.duration,c.formatDuration=c._formatTime(c.duration),c.loadPercent=parseInt(100*(c._audioTag.buffered.end(c._audioTag.buffered.length-1)/c.duration),10)})},i=function(){c.next(!0)},j=function(){c._audioTag.buffered.length&&a.$apply(function(){c.loadPercent=parseInt(100*(c._audioTag.buffered.end(c._audioTag.buffered.length-1)/c.duration),10)})};d.bind("playing",g(!0)),d.bind("pause",g(!1)),d.bind("ended",i),d.bind("timeupdate",f),d.bind("loadedmetadata",h),d.bind("progress",j)}},{scope:{exposedPlayer:"=playerControl",playlist:"=playlist"},link:function(a,c){if("AUDIO"!==c[0].tagName)return b.error("audioPlayer directive works only when attached to an <audio> type tag");var e=[],g=c.find("source"),h=a.playlist||[];angular.forEach(g,function(a){e.push({src:a.src,type:a.type,media:a.media})}),e.length&&h.unshift(e),a.exposedPlayer=new f(c,a,h),a.$watch("playlist",function(c,e){b.warn("playlist changed");var f,g=a.exposedPlayer,h=null;if(void 0===c)return b.error("if you use playlist attribute, you need to $scope.playlistVariable = []; in your code");if(g.currentTrack){f=e[g.currentTrack-1];for(var i=0;i<c.length;i++)if(angular.equals(c[i],f)){h=i;break}null!==h?(g.currentTrack=h+1,g.tracks=c.length):(g.pause(),c.length&&d(function(){g._clearAudioList(),g._addAudioList(c[0]),g.load(),g.tracks=c.length}))}else c.length&&(g._clearAudioList(),g._addAudioList(c[0]),g.load(),g.tracks=c.length)},!0),a.$on("$destroy",function(){})}}}]);